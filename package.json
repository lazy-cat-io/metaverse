{
  "name": "@team.sultanov/metaverse",
  "version": "0.0.0-SNAPSHOT",
  "description": "The Metaverse of Clojurians",
  "license": "MIT",
  "author": "Ilshat Sultanov <ilshat@sultanov.team>",
  "contributors": [
    {
      "name": "Ilshat Sultanov",
      "email": "ilshat@sultanov.team",
      "url": "https://github.com/just-sultanov"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sultanov-team/metaverse.git"
  },
  "homepage": "https://github.com/sultanov-team/metaverse#readme",
  "bugs": {
    "url": "https://github.com/sultanov-team/metaverse/issues"
  },
  "keywords": [
    "clojure",
    "clojurescript",
    "electron",
    "metaverse",
    "reagent",
    "shadow-cljs"
  ],
  "main": "public/main.js",
  "scripts": {
    "assets:icon:build": "npx electron-icon-maker -i public/assets/images/icon.png -o public/assets",
    "assets:runner:clean": "rm -rf public/main.js",
    "assets:app:clean": "rm -rf public/assets/js",
    "assets:clean": "rm -rf public/assets/styles/bundle.css && npm run assets:runner:clean && npm run assets:app:clean",
    "assets:watch": "npx cross-env TAILWIND_MODE=watch postcss src/main/css/index.css --output public/assets/styles/bundle.css --verbose --watch",
    "assets:build": "npx cross-env NODE_ENV=production postcss src/main/css/index.css --output public/assets/styles/bundle.css --verbose",
    "electron:clean": "rm -rf dist",
    "electron:watch": "npx electron .",
    "electron:build": "npx electron-builder build --publish never",
    "shadow:watch": "npx shadow-cljs watch runner app test",
    "shadow:build": "npx shadow-cljs release runner app",
    "test:build": "npx shadow-cljs compile ci",
    "test:run": "npx karma start karma.config.js --single-run",
    "clean": "npm run electron:clean && npm run assets:clean",
    "repl": "concurrently --kill-others --names \"assets,shadow\" \"npm run assets:watch\" \"npm run shadow:watch\"",
    "test": "npm run assets:build && npm run test:build && npm run test:run",
    "build": "npm run shadow:build && npm run assets:build && npm run electron:build",
    "outdated": "clojure -M:nop:outdated && npx ncu",
    "outdated:upgrade": "clojure -M:nop:outdated:outdated/upgrade && npx ncu -u && npm i",
    "setup": "npm ci"
  },
  "devDependencies": {
    "asar": "^3.1.0",
    "autoprefixer": "^10.4.2",
    "concurrently": "^7.0.0",
    "cross-env": "^7.0.3",
    "cssnano": "^5.1.0",
    "electron": "^17.1.0",
    "electron-builder": "^22.14.13",
    "electron-icon-maker": "^0.0.5",
    "highlight.js": "11.4.0",
    "karma": "^6.3.17",
    "karma-chrome-launcher": "^3.1.0",
    "karma-cljs-test": "^0.1.0",
    "npm-check-updates": "^12.5.2",
    "postcss": "^8.4.7",
    "postcss-cli": "^9.1.0",
    "postcss-import": "^14.0.2",
    "prettier": "^2.5.1",
    "shadow-cljs": "^2.17.6",
    "tailwindcss": "^3.0.23"
  },
  "dependencies": {
    "@heroicons/react": "^1.0.6",
    "@octokit/graphql": "^4.8.0",
    "@sentry/electron": "^3.0.3",
    "electron-store": "^8.0.1",
    "node-fetch": "2.6.7",
    "react": "^17.0.2",
    "react-dom": "^17.0.2"
  },
  "build": {
    "appId": "team.sultanov.metaverse",
    "productName": "metaverse",
    "icon": "public/assets/icons/mac/icon.icns",
    "asar": true,
    "asarUnpack": "**\\*.{node,dll}",
    "files": [
      "public/**/*",
      "!public/test/**/*"
    ],
    "directories": {
      "app": ".",
      "buildResources": "public/assets",
      "output": "dist"
    },
    "mac": {
      "category": "Development",
      "identity": null,
      "target": {
        "target": "default",
        "arch": [
          "arm64",
          "x64"
        ]
      },
      "type": "distribution",
      "hardenedRuntime": true,
      "entitlements": "assets/entitlements.mac.plist",
      "entitlementsInherit": "assets/entitlements.mac.plist",
      "gatekeeperAssess": false
    },
    "dmg": {
      "contents": [
        {
          "x": 130,
          "y": 220
        },
        {
          "x": 410,
          "y": 220,
          "type": "link",
          "path": "/Applications"
        }
      ]
    },
    "win": {
      "target": [
        "nsis"
      ]
    },
    "linux": {
      "target": [
        "AppImage"
      ],
      "category": "Development"
    }
  }
}
